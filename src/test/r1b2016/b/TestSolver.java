package test.r1b2016.b;

import java.util.ArrayList;
import java.util.Collections;

import org.junit.Test;
import org.junit.Ignore;

import util.*;
import r1b2016.b.*;

public class TestSolver {

	
	@Ignore
	public void t_fillArray(){
		
		ProblemSolver solver = new ProblemSolver(ProblemSolution.RUNMODE_SMALL);
		
		String s = "?6??7";
		int[] arr = new int[s.length()];
		arr = solver.fillArray(arr, s);
		
		System.out.println("t_fillArray for r1b2016.b:");
		System.out.println(s + "  -->  " + util.Util.intArrayToString(arr, ","));
	}
	
	@Ignore/*@Test*/
	public void t2_Solver(){
		
		String[] strs = new String[]{
				"1? 2?"
				,"?2? ??3"
				,"? ?"
				,"?5 ?0"
				,"99 ?0"
				,"?6? ?1?"
				,"?1? ?5?"
				,"?6? 4??"
				,"?6? ?0?"
				,"4?9 15?"
				,"10 ?5"
				,"?6?? ?0??"
				,"?6?6? ?0?0?"
				,"?1? 263"
			};
		
		System.out.println("t_Solver for r1b2016.b:");
		for(String s : strs){
			RawInput raw = new RawInput( new String[]{s} );
			ProblemSolver solver = new ProblemSolver(ProblemSolution.RUNMODE_SMALL);
			System.out.println(raw.toString() + " -> " + solver.solveCase(raw) + ", BF=" + solver.solveBF(raw));
		}
		
	}
	
	
	@Ignore
	public void t_str2Long(){
		String s = "0012";
		Long d = Long.parseLong(s);
		System.out.println("t_str2Long:" + d.toString());
	}
	
	@Test/*@Ignore*/
	public void t_18Long(){
		String[] strs = new String[]{
				 "95?59??0?9?59?9?5? ??????5?5950?9??5?"
				,"?99999999999999999 9?????????????????"
				,"?????????????????9 ?????????????????5"
				,"?099?9090?99?0??9? ???0??0?00???909??"
				,"3?63?5?778???73??? 0?12?2?5?57??26?7?"
			};
		
		System.out.println("t_18Long for r1b2016.b:");
		for(String s : strs){
			RawInput raw = new RawInput( new String[]{s} );
			ProblemSolver solver = new ProblemSolver(ProblemSolution.RUNMODE_SMALL);
			System.out.println(raw.toString() + " -> " + solver.solveCase(raw));
		}
	}
	
	@Ignore/*@Test*/
	public void t_ScorePair(){
		// 193|918, 993|998, 993|988
		ScorePair sp1 = new ScorePair( new int[]{1,9,3} , new int[]{9,1,8} );
		ScorePair sp2 = new ScorePair( new int[]{9,9,3} , new int[]{9,9,8} );
		ScorePair sp3 = new ScorePair( new int[]{9,9,3} , new int[]{9,8,8} );
		
		ArrayList<ScorePair> lst = new ArrayList<ScorePair>();
		lst.add(sp1);
		lst.add(sp2);
		lst.add(sp3);
		
		Collections.sort(lst);
		
		System.out.println("t_ScorePair for r1b2016.b:");
		for(ScorePair sp : lst){
			System.out.println(sp);
		}
	}
	
	@Test/*@Ignore*/
	public void t_Small_full(){
		String[] strs = new String[]{
				"1? 2?"
				,"?2? ??3"
				,"? ?"
				,"?5 ?0"
				,"99 ?0"
				,"?6? ?1?"
				,"?1? ?5?"
				,"?6? 4??"
				,"?0 9?"
				,"2?4 ??5"
				,"99 ?9"
				,"2?6 ???"
				,"0? 9?"
				,"??? ??3"
				,"?3? 44?"
				,"?9? ??5"
				,"9? 99"
				,"8?7 ??0"
				,"0?? 9?9"
				,"?4? ?0?"
				,"?7? ?3?"
				,"4?9 15?"
				,"9? ?9"
				,"?92 ?2?"
				,"0? 99"
				,"02? 3?0"
				,"?9? ?3?"
				,"?0? ?5?"
				,"?? ?9"
				,"0?? ?21"
				,"?? 9?"
				,"?9 ?5"
				,"?5? ?1?"
				,"??? 2??"
				,"0 ?"
				,"96? ?79"
				,"?0 ?9"
				,"?1? ?6?"
				,"??? 1?1"
				,"9? ??"
				,"97? ?92"
				,"310 ??5"
				,"? 0"
				,"?9? ?4?"
				,"778 ???"
				,"?8 93"
				,"?0? ?4?"
				,"11? 0??"
				,"?6? ?0?"
				,"?1? 263"
				,"?0 99"
				,"3?6 3?5"
				,"?92 ??9"
				,"??? 5?4"
				,"?0 ?5"
				,"12? 2?5"
				,"?3? ?8?"
				,"4?? ??4"
				,"?86 6??"
				,"99 0?"
				,"??9 6?1"
				,"49? 04?"
				,"9 ?"
				,"?5 99"
				,"?2? ?7?"
				,"0? ?5"
				,"387 0??"
				,"9?8 ?93"
				,"?2? ?6?"
				,"7?2 ?7?"
				,"?6? ?2?"
				,"?3? ??0"
				,"?2? 3??"
				,"?9 ??"
				,"?9? ?5?"
				,"76? ??5"
				,"?92 9?8"
				,"?0 ??"
				,"3?? 5?9"
				,"?3? ?9?"
				,"?04 ?97"
				,"?83 5??"
				,"??9 09?"
				,"0? ?0"
				,"9? ?0"
				,"99 ??"
				,"??0 ??9"
				,"0? ?9"
				,"?9 99"
				,"?8? ?3?"
				,"3?8 ?10"
				,"?5? ?0?"
				,"?92 ??3"
				,"9?9 ??0"
				,"5 ?"
				,"?? ?5"
				,"?1? ?65"
				,"?21 67?"
				,"56? 2??"
				,"6?? 35?"
				,"0?3 2?9"
				,"0?4 ?7?"
				,"8?? ?94"
				,"?76 ?2?"
				,"94? ?36"
				,"49? ???"
				,"??6 ?22"
				,"60? ?4?"
				,"99 9?"
				,"3?? ???"
				,"?7? ?1?"
				,"??7 4?1"
				,"?3? 727"
				,"? 5"
				,"?5 0?"
				,"??2 ?98"
				,"9?8 ?92"
				,"?8? ?2?"
				,"?0? 46?"
				,"?? ?0"
				,"959 ?1?"
				,"?94 03?"
				,"0? ??"
				,"?05 927"
				,"?0? 99?"
				,"?99 1??"
				,"?1? ?7?"
				,"??? ??7"
				,"??0 9?9"
				,"9?? ???"
				,"9? ?5"
				,"?59 1?1"
				,"?4? ?9?"
				,"?5 9?"
				,"?2? ?8?"
				,"??? 35?"
				,"??2 40?"
				,"?4? 645"
				,"??2 0?9"
				,"5?? 68?"
				,"9? 0?"
				,"?9 0?"
				,"?7? ?2?"
				,"7?5 ?06"
				,"?2? ?26"
				,"80? 6??"
				,"?98 ??3"
				,"1?? 165"
				,"?99 ??0"
				,"?5 10"
				,"?? ??"
				,"70? ?2?"
				,"8?1 ??4"
				,"?9 ?0"
				,"?75 ??3"
				,"99? ?0?"
				,"??4 ?71"
				,"??? 819"
				,"57? ?26"
				,"?5 ??"
				,"?5? ?9?"
				,"104 3??"
				,"?0? ?6?"
				,"282 4?6"
				,"??0 ?99"
				,"?8? 50?"
				,"?9 9?"
				,"504 ??7"
				,"?? 0?"
				,"?5 ?9"
				,"?3? ?7?"
				,"??7 5?0"
				,"??? 640"
				,"??7 ?4?"
				,"?? 99"
				,"10 ?5"
				,"??? 2?9"
				,"3?7 76?"
				,"159 4??"
				,"7?6 ??0"
				,"?4? ?8?"
				,"??? 8??"
				,"99 ?5"
				,"18? ?3?"
				,"17? 5??"
				,"?0 0?"
				,"93 ?8"
				,"?8? ?4?"
				,"??? 24?"
				,"??3 ??9"
				,"?8? 104"
				,"??8 090"
				,"??3 ?98"
				,"??? ??4"
				,"?4? ??2"
				,"611 66?"
				,"?93 9?8"
				,"? 9"
				,"7?9 650"
				,"??? ???"
			};
		
		System.out.println("t_Small_full for r1b2016.b: DIFFERENT SOLUTIONS only");
		int cnt = 0;
		for(String s : strs){
			RawInput raw = new RawInput( new String[]{s} );
			ProblemSolver solver = new ProblemSolver(ProblemSolution.RUNMODE_SMALL);
			String sRaw = solver.solveCase(raw);
			String sBF = solver.solveBF(raw);
			if(!sBF.equalsIgnoreCase(sRaw)){
				System.out.println(raw.toString() + " -> " + sRaw + ", BF=" + sBF);
				cnt++;
			}
		}
		if(cnt==0){
			System.out.println("--EVERYTHING OK :)");
		}
	}
	
	
	@Ignore/*@Test*/
	public void t_RootNode(){
		TreeNode n1 = new TreeNode(1,1);
		TreeNode n2 = new TreeNode(1,2);
		TreeNode n3 = new TreeNode(3,4);
		TreeNode n31 = new TreeNode(5,6);
		TreeNode n32 = new TreeNode(7,8);
		
		n1.addChild(n2);
		n2.addChild(n3);
		n3.addChild(n31);
		n3.addChild(n32);
		
		RootNode root = new RootNode(n1);
		
		System.out.println("t_RootNode for r1b2016.b:");
		System.out.println("  TreeNodes:");
		System.out.println("    n1=" + n1);
		System.out.println("    n2=" + n2);
		System.out.println("    n3=" + n3);
		System.out.println("    n31=" + n31);
		System.out.println("    n32=" + n32);
		
		ArrayList<ScorePair> lst = root.DepthWalkOutput();
		
		System.out.println("  ScorePairs:");
		for(ScorePair sp : lst){
			System.out.println("  " + sp);
		}
	}
	
	
}
